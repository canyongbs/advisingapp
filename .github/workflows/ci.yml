name: CI

on:
  workflow_call:
    secrets:
      pat-token:
        required: true
  workflow_dispatch:

jobs:
  prep-and-code-consistency:
    runs-on: ubuntu-22.04

    timeout-minutes: 15

    env:
      php-extensions: gd, gmp, redis, mailparse
      php-extensions-key: ext-cache-20250820
      php-version: "8.4"

    outputs:
      php-extensions: ${{ env.php-extensions }}
      php-extensions-key: ${{ env.php-extensions-key }}
      php-version: ${{ env.php-version }}

    steps:
      - name: Checkout code | Internal
        if: ${{ github.event_name == 'merge_group' || github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.pat-token }}

      - name: Checkout code | External
        if: ${{ github.event_name != 'merge_group' && github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]' }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0
        with:
          ref: ${{ github.head_ref }}

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@ed47a55c463bf49c0de08e5290a3d55208e2c287 #1.13.0
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          key: ${{ env.php-extensions-key }}

      - name: Cache extensions
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ runner.os }}-phpext-${{ env.php-version }}-${{ env.php-extensions-key }}
          restore-keys: ${{ runner.os }}-phpext-${{ env.php-version }}

      - uses: shivammathur/setup-php@ec406be512d7077f68eed36e63f4d91bc006edc4 #2.35.4
        with:
          php-version: ${{ env.php-version }}
          coverage: none
          extensions: ${{ env.php-extensions }}

      - name: Cache dependencies
        id: cache-composer
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock', 'app-modules/**/composer.lock') }}

      - if: ${{ steps.cache-composer.outputs.cache-hit != 'true' }}
        name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader
        shell: bash

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 #5.0.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - run: npm install

      - name: Set up Ruby
        uses: ruby/setup-ruby@44511735964dcb71245e7e55f72539531f7bc0eb #1.257.0

      - name: Run Ruby Script
        run: ruby ./copyright.rb

      - name: Cache PHP CS Fixer
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: .php-cs-fixer.cache
          key: ${{ runner.OS }}-${{ github.repository }}-phpcsfixer-${{ github.run_id }}
          restore-keys: |
            ${{ runner.OS }}-${{ github.repository }}-phpcsfixer-

      - name: Cache Prettier
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: ./node_modules/.cache/prettier/.prettier-cache
          key: ${{ runner.OS }}-${{ github.repository }}-prettier-${{ github.run_id }}
          restore-keys: |
            ${{ runner.OS }}-${{ github.repository }}-prettier-

      - name: Run Formatters
        run: composer format

      - name: Commit changes
        if: ${{ github.event_name != 'merge_group' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 #6.0.1
        with:
          commit_message: >
            Update code formatting and copyright headers

      - name: Check for changes
        if: ${{ github.event_name == 'merge_group' || github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]' }}
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf #20.0.4
        with:
          fail-if-changed: "true"

  test:
    strategy:
      matrix:
        testsuite: [ Landlord, Tenant ]

    runs-on: ubuntu-22.04

    needs: [ prep-and-code-consistency ]

    env:
      DB_PORT: 5432
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: testing_landlord
      REDIS_HOST: 127.0.0.1

    timeout-minutes: 15

    services:
      postgres:
        # Docker Hub image
        image: postgres:15
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Create tenant database
        run: psql -h 127.0.0.1 -d testing_landlord -U root -c 'CREATE DATABASE testing_tenant;'
        env:
          PGPASSWORD: root

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@ed47a55c463bf49c0de08e5290a3d55208e2c287 #1.13.0
        with:
          php-version: ${{ needs.prep-and-code-consistency.outputs.php-version }}
          extensions: ${{ needs.prep-and-code-consistency.outputs.php-extensions }}
          key: ${{ needs.prep-and-code-consistency.outputs.php-extensions-key }}

      - name: Cache extensions
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ runner.os }}-phpext-${{ needs.prep-and-code-consistency.outputs.php-version }}-${{ needs.prep-and-code-consistency.outputs.php-extensions-key }}
          restore-keys: ${{ runner.os }}-phpext-${{ needs.prep-and-code-consistency.outputs.php-version }}

      - uses: shivammathur/setup-php@ec406be512d7077f68eed36e63f4d91bc006edc4 #2.35.4
        with:
          php-version: ${{ needs.prep-and-code-consistency.outputs.php-version }}
          coverage: none
          extensions: ${{ needs.prep-and-code-consistency.outputs.php-extensions }}

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Cache dependencies
        id: cache-composer
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock', 'app-modules/**/composer.lock') }}

      - if: ${{ steps.cache-composer.outputs.cache-hit != 'true' }}
        name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader
        shell: bash

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 #5.0.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - run: npm install

      - name: Build Assets
        run: npm run build

      - name: Generate key
        run: php artisan key:generate

      - name: Cache Modular Modules
        run: php artisan modules:cache --env=testing

      - name: Cache Routes
        run: php artisan route:cache --env=testing

      - name: Cache Views
        run: php artisan view:cache --env=testing

      - name: Cache Events
        run: php artisan event:cache --env=testing

      - name: Cache Icons
        run: php artisan icons:cache --env=testing

      - name: Cache Filament Components
        run: php artisan filament:cache-components --env=testing

      - name: Check route integrity
        run: php artisan route:list

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test --configuration phpunit-ci.xml --parallel --testsuite=${{ matrix.testsuite }}

  lint:
    runs-on: ubuntu-22.04

    needs: [ prep-and-code-consistency ]

    env:
      DB_PORT: 5432
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: testing_landlord
      PENNANT_STORE: array
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      AUDIT_QUEUE_CONNECTION: sync
      SESSION_DRIVER: array

    timeout-minutes: 15

    services:
      postgres:
        # Docker Hub image
        image: postgres:15
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@ed47a55c463bf49c0de08e5290a3d55208e2c287 #1.13.0
        with:
          php-version: ${{ needs.prep-and-code-consistency.outputs.php-version }}
          extensions: ${{ needs.prep-and-code-consistency.outputs.php-extensions }}
          key: ${{ needs.prep-and-code-consistency.outputs.php-extensions-key }}

      - name: Cache extensions
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ runner.os }}-phpext-${{ needs.prep-and-code-consistency.outputs.php-version }}-${{ needs.prep-and-code-consistency.outputs.php-extensions-key }}
          restore-keys: ${{ runner.os }}-phpext-${{ needs.prep-and-code-consistency.outputs.php-version }}

      - uses: shivammathur/setup-php@ec406be512d7077f68eed36e63f4d91bc006edc4 #2.35.4
        with:
          php-version: ${{ needs.prep-and-code-consistency.outputs.php-version }}
          coverage: none
          extensions: ${{ needs.prep-and-code-consistency.outputs.php-extensions }}

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Cache dependencies
        id: cache-composer
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock', 'app-modules/**/composer.lock') }}

      - if: ${{ steps.cache-composer.outputs.cache-hit != 'true' }}
        name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader
        shell: bash

      - name: Generate key
        run: php artisan key:generate

      - name: Migrate Landlord Database
        run: php artisan migrate --database=landlord --path=database/landlord --force

      - name: Set up Tenant
        run: php artisan tenants:create test test.advisingapp.local -y

      - name: Generate Helper Files
        run: php artisan app:generate-helper-files

      - name: "Restore result cache"
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        with:
          path: tmp
          key: "linting-result-cache-${{ github.run_id }}"
          restore-keys: |
            linting-result-cache-

      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse --configuration phpstan-ci.neon --no-progress

      - name: "Save result cache"
        uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809 #4.2.4
        if: ${{ !cancelled() }}
        with:
          path: tmp
          key: "linting-result-cache-${{ github.run_id }}"
