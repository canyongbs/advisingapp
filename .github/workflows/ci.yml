name: CI

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-deps:
    runs-on: ubuntu-22.04

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Dependencies
        uses: ./.github/actions/composer-dependency-setup
  lint:
    runs-on: ubuntu-22.04

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    timeout-minutes: 10

    needs: [ build-deps ]

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Dependencies
        uses: ./.github/actions/composer-dependency-setup

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm install

      - name: Build Assets
        run: npm run build

      - name: Linting the code base
        run: composer lint

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply Linting Changes [skip ci]
  test:
    runs-on: ubuntu-22.04

    timeout-minutes: 10

    needs: [ build-deps, lint ]

    env:
      DB_PORT: 3306
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: testing
      SCOUT_PREFIX: test_
      MEILISEARCH_KEY: testing
      MEILISEARCH_HOST: http://127.0.0.1:7700
      MEILISEARCH_PORT: 7700

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

      meilisearch:
        image: "getmeili/meilisearch:v1.2.0"
        ports:
          - 7700:7700
        options: --health-cmd "wget --no-verbose --spider http://127.0.0.1:7700/health" --health-timeout 5s --health-retries 3

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Start Mysql
        run: sudo service mysql start

      - name: Create Database
        run: mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS testing"

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Setup Dependencies
        uses: ./.github/actions/composer-dependency-setup

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm install

      - name: Build Assets
        run: npm run build

      - name: Generate key
        run: php artisan key:generate

      - name: Check route integrity
        run: php artisan route:cache

      - name: Clear Config
        run: php artisan optimize:clear

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test --parallel --configuration phpunit-ci.xml --testsuite=Feature,Unit
  code-analysis:
    runs-on: ubuntu-22.04

    timeout-minutes: 10

    needs: [ build-deps, lint ]

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Dependencies
        uses: ./.github/actions/composer-dependency-setup

      - name: Code Analysis
        run: composer larastan
