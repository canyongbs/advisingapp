version: '3.8'
services:
  advisingapp-app:
    build:
      target: development
    environment:
      SSL_MODE: "mixed"
      LANDLORD_MIGRATE: '${LANDLORD_MIGRATE:-true}'
      TENANT_MIGRATE: '${TENANT_MIGRATE:-true}'
      LARAVEL_SCHEDULER_ENABLED: '${LARAVEL_SCHEDULER_ENABLED:-true}'
      LARAVEL_QUEUE_ENABLED: '${LARAVEL_QUEUE_ENABLED:-true}'
      LARAVEL_OCTANE_WATCH: '${LARAVEL_OCTANE_WATCH:-false}'
      CACHE_CONFIG: '${CACHE_CONFIG:-false}'
      CACHE_ROUTES: '${CACHE_ROUTES:-false}'
      CACHE_VIEWS: '${CACHE_VIEWS:-false}'
      CACHE_EVENTS: '${CACHE_EVENTS:-false}'
      CACHE_ICONS: '${CACHE_ICONS:-false}'
      CACHE_FILAMENT_COMPONENTS: '${CACHE_FILAMENT_COMPONENTS:-false}'
      PUID: '${SPIN_USER_ID:-9999}'
      PGID: '${SPIN_GROUP_ID:-9999}'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.advisingapp-app.rule=HostRegexp(`advisingapp.local`, `{subdomain:[a-z0-9]+}.advisingapp.local`)"
      - "traefik.http.routers.advisingapp-app.entrypoints=websecure"
      - "traefik.http.routers.advisingapp-app.tls=true"
      - "traefik.http.services.advisingapp-app.loadbalancer.server.port=443"
      - "traefik.http.services.advisingapp-app.loadbalancer.server.scheme=https"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - '.:/var/www/html'
    networks:
      - cgbs-development
    depends_on:
      - advisingapp-redis
      - advisingapp-minio
      - advisingapp-mailpit
      - advisingapp-pgsql

  advisingapp-redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-63791}:6379'
    volumes:
      - 'advisingapp-redis:/data'
    networks:
      - cgbs-development
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

  advisingapp-minio:
    image: 'minio/minio:RELEASE.2023-07-07T07-13-57Z'
    environment:
      MINIO_ROOT_USER: advisingapp
      MINIO_ROOT_PASSWORD: password
    volumes:
      - 'advisingapp-minio:/data/minio'
    networks:
      - cgbs-development
    command: 'minio server /data/minio --console-address ":8900"'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      retries: 3
      timeout: 5s
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.advisingapp-minio-console.rule=Host(`storage.tools.advisingapp.local`)"
      - "traefik.http.routers.advisingapp-minio-console.entrypoints=websecure"
      - "traefik.http.routers.advisingapp-minio-console.tls=true"
      - "traefik.http.routers.advisingapp-minio-console.service=advisingapp-minio-console-service"
      - "traefik.http.services.advisingapp-minio-console-service.loadbalancer.server.port=8900"
      - "traefik.http.services.advisingapp-minio-console-service.loadbalancer.server.scheme=http"

      - "traefik.http.routers.advisingapp-minio.rule=Host(`media.tools.advisingapp.local`, `advisingapp-minio`)"
      - "traefik.http.routers.advisingapp-minio.entrypoints=websecure"
      - "traefik.http.routers.advisingapp-minio.tls=true"
      - "traefik.http.routers.advisingapp-minio.service=advisingapp-minio-service"
      - "traefik.http.services.advisingapp-minio-service.loadbalancer.server.port=9000"
      - "traefik.http.services.advisingapp-minio-service.loadbalancer.server.scheme=http"

  advisingapp-mailpit:
    image: 'axllent/mailpit:latest'
    networks:
      - cgbs-development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.advisingapp-mailpit.rule=Host(`mail.tools.advisingapp.local`)"
      - "traefik.http.routers.advisingapp-mailpit.entrypoints=websecure"
      - "traefik.http.routers.advisingapp-mailpit.tls=true"
      - "traefik.http.services.advisingapp-mailpit.loadbalancer.server.port=8025"
      - "traefik.http.services.advisingapp-mailpit.loadbalancer.server.scheme=http"

  advisingapp-pgsql:
    image: 'postgres:15'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'advisingapp-pgsql:/var/lib/postgresql/data'
      - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - cgbs-development
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
      retries: 3
      timeout: 5s

networks:
  cgbs-development:
    external: true

volumes:
  advisingapp-redis:
    driver: local
  advisingapp-minio:
    driver: local
  advisingapp-pgsql:
    driver: local
